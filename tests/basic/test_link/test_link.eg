

action A[ 16 ]
{	
	action Log[ 16 ]
	{
		LOG( "A::Log" );
	}
}

action B[ 16 ] : A
{
}

action C[ 16 ] : B
{
}

action D[ 16 ] : A
{
}

link Test[ 16 ] : B
{

}

A a = A();
B b = B();
C c = C();
D d = D();


{
	Test t = Test().base( c );
	if( C convertFromLink = t )
	{
		convertFromLink.Log();
	}
	
}

{
	Test t = Test();
	if( C convertFromLink = t )
	{
		convertFromLink.Log();
	}
}

{	
	Test t = Test().base( b );
	
	if( Test t2 = b )
	{
		LOG( "works1" );
	}
	if( Test t2 = c )
	{
		LOG( "works2" );
	}
	if( Test t2 = a )
	{
		LOG( "shouldnt" );
	}

}




eg::event_iterator iter = events::getIterator();
RawEvent ev;