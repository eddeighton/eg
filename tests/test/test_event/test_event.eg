


include( <iostream> );

action A[ 8 ]( int iCycles )
{
	dim int counter;
	
	counter( counter() + 1 );
	if( counter() < iCycles )
		return eg::wait();
		
	std::cout << "A completed after: " << iCycles << std::endl;
}


dim int state;
state( state() + 1 );

switch( state() )
{
	case 1:
	{
		return eg::wait_all( { A( 100 ), A( 200 ) } );
	}
	case 2:
	{
		std::cout << "Wait all completed: " << clock::cycle( 0 ) << std::endl;
		return eg::wait_any( { A( 100 ), A( 200 ) } );
	}
	case 3:
	{
		std::cout << "Wait any completed: " << clock::cycle( 0 ) << std::endl;
		return eg::sleep_all( { A( 100 ), A( 200 ) } );
	}
	case 4:
	{
		std::cout << "Sleep all completed: " << clock::cycle( 0 ) << std::endl;
		return eg::sleep_any( { A( 100 ), A( 200 ) } );
	}
	case 5:
	{
		std::cout << "Sleep any completed: " << clock::cycle( 0 ) << std::endl;
	}
}


//wait for a to finish
