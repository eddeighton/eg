

abstract Base2
{
    dim int x;
}

abstract Base : Base2
{
    action TestA
    {
        TEST_MSG( theStr() == std::string( "A" ), "String should be A: " << theStr() );
    }
    
    action TestB
    {
        TEST_MSG( theStr() == std::string( "B" ), "String should be B: " << theStr() );
    }
    
}

action A[ 2 ] : Base
{
    dim std::string theStr;
}

action B[ 2 ] : Base
{
    dim std::string theStr;
}

Base2 baseA = A();
Base2 baseB = B();

baseA.theStr( std::string( "A" ) );
baseB.theStr( std::string( "B" ) );

baseA.TestA();
baseB.TestB();
