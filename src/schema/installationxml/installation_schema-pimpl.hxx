// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef W__ROOT_EG_SRC_SRC_SCHEMA_INSTALLATION_SCHEMA_PIMPL_HXX
#define W__ROOT_EG_SRC_SRC_SCHEMA_INSTALLATION_SCHEMA_PIMPL_HXX

#include <xsde/cxx/pre.hxx>

// Begin prologue.
//
//
// End prologue.

#ifndef XSDE_OMIT_PAGGR
#  define XSDE_OMIT_PAGGR
#  define W__ROOT_EG_SRC_SRC_SCHEMA_INSTALLATION_SCHEMA_PIMPL_HXX_CLEAR_OMIT_PAGGR
#endif

#include "installation_schema-pskel.hxx"

#include <xsde/cxx/stack.hxx>

namespace installationxml
{
  class Installation_pimpl: public Installation_pskel
  {
    public:
    virtual void
    pre ();

    // Elements.
    //
    virtual void
    Version (const ::std::string&);

    virtual void
    Python (const ::std::string&);

    virtual void
    Toolchain (const ::std::string&);

    virtual void
    SDK (const ::std::string&);

    virtual ::installationxml::Installation
    post_Installation ();

    public:
    struct Installation_pimpl_state
    {
      ::installationxml::Installation Installation_;
    };

    Installation_pimpl_state Installation_pimpl_state_;
  };
}

#ifdef W__ROOT_EG_SRC_SRC_SCHEMA_INSTALLATION_SCHEMA_PIMPL_HXX_CLEAR_OMIT_PAGGR
#  undef XSDE_OMIT_PAGGR
#endif

#ifndef XSDE_OMIT_PAGGR

namespace installationxml
{
  // Parser aggregate for the Installation element.
  //
  class Installation_paggr
  {
    public:
    Installation_paggr ();

    void
    pre ()
    {
      this->Installation_p_.pre ();
    }

    ::installationxml::Installation
    post ()
    {
      return this->Installation_p_.post_Installation ();
    }

    ::installationxml::Installation_pimpl&
    root_parser ()
    {
      return this->Installation_p_;
    }

    static const char*
    root_name ();

    static const char*
    root_namespace ();

    void
    reset ()
    {
      this->Installation_p_._reset ();
    }

    public:
    ::installationxml::Installation_pimpl Installation_p_;
    ::xml_schema::string_pimpl string_p_;
  };
}

#endif // XSDE_OMIT_PAGGR

// Begin epilogue.
//
//
// End epilogue.

#include <xsde/cxx/post.hxx>

#endif // W__ROOT_EG_SRC_SRC_SCHEMA_INSTALLATION_SCHEMA_PIMPL_HXX
