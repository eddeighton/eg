// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "wizard_schema-simpl.hxx"

#include <xsde/cxx/serializer/validating/string-common.hxx>

namespace wizardxml
{
  // Wizard_simpl
  //

  void Wizard_simpl::
  pre (const ::wizardxml::Wizard& x)
  {
    this->Wizard_simpl_state_.Wizard_ = &x;
    this->Wizard_simpl_state_.Project_ = 
    this->Wizard_simpl_state_.Wizard_->Project ().begin ();
    this->Wizard_simpl_state_.Project_end_ = 
    this->Wizard_simpl_state_.Wizard_->Project ().end ();
  }

  bool Wizard_simpl::
  Project_next ()
  {
    return this->Wizard_simpl_state_.Project_ != 
    this->Wizard_simpl_state_.Project_end_;
  }

  ::std::string Wizard_simpl::
  Project ()
  {
    return *this->Wizard_simpl_state_.Project_++;
  }
}

namespace wizardxml
{
  // Wizard_saggr
  //

  Wizard_saggr::
  Wizard_saggr ()
  {
    this->Wizard_s_.serializers (this->string_s_);
  }

  const char* Wizard_saggr::
  root_name ()
  {
    return "Wizard";
  }

  const char* Wizard_saggr::
  root_namespace ()
  {
    return "";
  }
}

// Begin epilogue.
//
//
// End epilogue.

