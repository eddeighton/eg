

cmake_minimum_required( VERSION 3.1...3.16 )

project( eg VERSION 1.0 LANGUAGES CXX )

#insist on ALL projects using c++ 17
set( CMAKE_CXX_STANDARD 17 )

######################################
#win32 specific settings
IF( ${WIN32} )

# /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MP
#set( CMAKE_CXX_FLAGS "/DWIN32 /D_WINDOWS /W3 /GR /EHsc /MP")

#add_compile_options(/std:c++17)

#add_compile_options(/Zc:__cplusplus)
#add_compile_options(/DWIN32)
#add_compile_options(/D_WINDOWS)
#add_compile_options(/MP)
#add_compile_options(/W3)

add_definitions(-D_WIN32_WINNT=0x0601)
add_definitions(-DNOMINMAX -D_NOMINMAX)

#add_definitions(-DUNICODE -D_UNICODE)

##specify the character set to use for all projects
#add_definitions(-DSBCS -D_SBCS)

ENDIF( ${WIN32} )


#setup some common directories from the root of the project
set( CMAKE_PARENT_PATH ${CMAKE_CURRENT_LIST_DIR}/.. )
find_path( EG_ROOT_DIR NAMES api PATHS ${CMAKE_PARENT_PATH} )
set( EG_API_DIR ${EG_ROOT_DIR}/api )
set( EG_SRC_DIR ${EG_ROOT_DIR}/src )

#helper path if third party libs are in parent folder
set( EG_THIRD_PARTY_DIR ${EG_ROOT_DIR}/../../thirdparty )

include_directories( ${EG_API_DIR} )
include_directories( ${EG_SRC_DIR} )

#attempt to ensure only Debug and Release configs are generated by default
set(CMAKE_CONFIGURATION_TYPES Debug Release CACHE STRING INTERNAL FORCE)

#enable folders within generated IDE build systems
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

#ensure language runtimes and other system libs are copied to installation folder
include (InstallRequiredSystemLibraries)


#now simply add all the actual targets

add_subdirectory(schema)
add_subdirectory(common)
add_subdirectory(eventlog)
add_subdirectory(eg)
add_subdirectory(eventlog_cmd)
add_subdirectory(eventlog_module)
add_subdirectory(eg_runtime)
add_subdirectory(clang_plugin)
add_subdirectory(driver)
add_subdirectory(generators)
add_subdirectory(tests)
add_subdirectory(innosetup)